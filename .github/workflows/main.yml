name: run-turuylevaade-daily

env:
  RSPM: https://packagemanager.posit.co/cran/__linux__/jammy/latest
  CRAN: https://cloud.r-project.org
  RENV_CONFIG_REPOS_OVERRIDE: https://packagemanager.posit.co/cran/__linux__/jammy/latest
  RENV_CONFIG_INSTALL_PRECOMPILED: "true"
  RSPM_BIN:  https://packagemanager.posit.co/cran/__linux__/jammy/latest
  RSPM_SRC:  https://packagemanager.posit.co/cran/2025-05-12
  R_LIBS_USER: ${{ github.workspace }}/renv/library

on:
  # 10:05 in Tallinn = 07:05 UTC
  schedule:
    - cron: '5 7 * * *'
  workflow_dispatch: {}          # manual “Run workflow” button

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read            # checkout code
      id-token: write           # future-proof for OIDC, not used now

    steps:
      # 1 Pull the repo
      - uses: actions/checkout@v4

      # 2 Load the deployment key into an in-memory ssh-agent
      #    – nothing ever touches the runner’s disk
      - uses: webfactory/ssh-agent@v0.9.1      # pin exact tag
        with:
          ssh-private-key: ${{ secrets.UPLOAD_TO_ZONE }}

      # 3 Trust the host fingerprint (prevents MITM & prompts)
      - name: Add server fingerprint
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 4 install R
      - uses: r-lib/actions/setup-r@v2
      
      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev libssh-dev libssl-dev \
            libcairo2-dev libfontconfig1-dev libfreetype6-dev \
            libpng-dev libjpeg-dev libxml2-dev libproj-dev pandoc libharfbuzz-dev libfribidi-dev

      # 5 Cache the renv library
      - uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key:  ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ runner.os }}-renv-

      - name: Restore packages with renv
        run: |
          #  kindlusta, et kaust on olemas
          mkdir -p "${R_LIBS_USER}"

          # paigalda renv otse sellesse kausta
          Rscript -e 'install.packages("renv", lib = Sys.getenv("R_LIBS_USER"), repos = "https://cloud.r-project.org")'

          # tee sama libPath kättesaadavaks ka järgmisele R-protsessile
          Rscript - <<'RSCRIPT'
            .libPaths(Sys.getenv("R_LIBS_USER"))   # lisame käsitsi esimeseks

            repos <- c(
              JAMMY_BIN = Sys.getenv("RSPM_BIN"),
              SNAP_SRC  = Sys.getenv("RSPM_SRC"),
              CRAN      = Sys.getenv("CRAN")
            )
            options(
              repos = repos,
              install.packages.compile.from.source = "never"
            )
            renv::restore(lockfile = "renv.lock", prompt = FALSE, repos = repos)
          RSCRIPT

      # 7 Run the analysis script
      - name: Run turuülevaade
        run: Rscript run_turuylevaade.R
